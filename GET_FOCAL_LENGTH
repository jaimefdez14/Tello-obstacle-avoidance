import cv2

w=0;
measured_distance = 135
real_width = 20
real_width_ref = 14.3

fonts = cv2.FONT_HERSHEY_COMPLEX
GREEN = (0, 255, 0)

ref_image = cv2.imread("/Users/jaime/Downloads/Ref_image.jpeg")
 
# face detector object
face_detector = cv2.CascadeClassifier("/Users/jaime/Downloads/haarcascade_frontalface_default.xml")

def face_data(image):
 
    face_width = 0  # making face width to zero
 
    # converting color image ot gray scale image
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
 
    # detecting face in the image
    faces = face_detector.detectMultiScale(gray_image, 1.3, 5)
 
    # looping through the faces detect in the image
    # getting coordinates x, y , width and height
    for (x, y, h, w) in faces:
 
        # draw the rectangle on the face
        cv2.rectangle(image, (x, y), (x+w, y+h), GREEN, 2)
 
        # getting face width in the pixels
        face_width = w
 
    # return the face width in pixel
    return face_width

w_ref=face_data(ref_image)
#######################################################################

            
focal_length = (w_ref * measured_distance) / real_width_ref


print("The value of focal length is = " , focal_length)



# cap.release()
cv2.destroyAllWindows()
